services:
  # ===================================================================================================================================================================================
  backend:
    image: fenrisshq/terracapital:backend
    build:
      context: ./backend
    environment:
      - NODE_ENV=production
      - FORCE_COLOR=1
      - DISPLAY=${X11_DISPLAY}
      - APP_PORT=${APP_PORT}
      - APP_BASE_URL=${APP_BASE_URL}
      - APP_DATABASE_CONNECTION_URL=${APP_DATABASE_CONNECTION_URL}
      - APP_REDIS_HOST=${APP_REDIS_HOST}
      - APP_REDIS_PORT=${APP_REDIS_PORT}
      - API_S3_ENDPOINT=${API_S3_ENDPOINT}
      - API_S3_ACCESS_KEY=${API_S3_ACCESS_KEY}
      - API_S3_SECRET_KEY=${API_S3_SECRET_KEY}
      - API_S3_BUCKET=${API_S3_BUCKET}
      - API_GOOGLE_CLIENT_ID=${API_GOOGLE_CLIENT_ID}
      - API_GOOGLE_CLIENT_SECRET=${API_GOOGLE_CLIENT_SECRET}
      - APP_PLAYWRIGHT_HEADLESS=${APP_PLAYWRIGHT_HEADLESS}
    volumes:
      - ./backend/logs:/usr/src/app/logs
    depends_on:
      - redis
    tty: true
    restart: always
  # ===================================================================================================================================================================================
  frontend:
    image: fenrisshq/terracapital:frontend
    build:
      context: ./frontend
    environment:
      - NODE_ENV=production
    restart: always
  # ===================================================================================================================================================================================
  nginx:
    image: fenrisshq/terracapital:nginx
    build:
      context: ./nginx
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - ./nginx/logs:/var/log/nginx:z
    depends_on:
      - backend
      - frontend
    restart: always
  # ===================================================================================================================================================================================
  redis:
    image: bitnami/redis:7.0.8
    command: /opt/bitnami/scripts/redis/run.sh --maxmemory-policy noeviction
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - redis_data:/bitnami/redis/data
    restart: always

volumes:
  redis_data:
